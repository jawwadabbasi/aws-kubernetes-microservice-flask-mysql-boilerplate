name: main

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

env:
  GIT_MODE: prod
  KUBE_NAMESPACE: kube-batman-production
  KUBE_CONFIG: ${{ secrets.AWS_PROD_CLUSTER_01 }}
  KUBE_MANIFEST: $GIT_MODE/kubeconfig.yaml
  DOCKER_IMAGE: ${{ secrets.AWS_DOCKER_REGISTRY }}/${{ github.event.repository.name }}:$GIT_MODE-${{ github.run_number }}

jobs:
  validate-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      
      - name: Configure python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Lint code
        run: |
          pip install flake8
          flake8 --select=E712,E9,W6,F --ignore=F401,W605 src/.

  build-and-push:
    runs-on: ubuntu-latest
    needs: [ validate-code ]

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push to registry
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }} -f ${{ env.GIT_MODE }}/Dockerfile .
          docker push ${{ env.DOCKER_IMAGE }}

  deploy-and-verify:
    runs-on: ubuntu-latest
    needs: [ build-and-push ]

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Replace namespace placeholder in Kubernetes manifest
        run: sed -i "s,PLACEHOLDER_NAMESPACE,${{ env.KUBE_NAMESPACE }},g" ${{ env.KUBE_MANIFEST }}

      - name: Replace service name placeholder in Kubernetes manifest
        run: sed -i "s,PLACEHOLDER_SERVICE_NAME,${{ github.event.repository.name }},g" ${{ env.KUBE_MANIFEST }}

      - name: Replace docker image placeholder in Kubernetes manifest
        run: sed -i "s,PLACEHOLDER_DOCKER_IMAGE,${{ env.DOCKER_IMAGE }},g" ${{ env.KUBE_MANIFEST }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Kubernetes cluster
        uses: kodermax/kubectl-aws-eks@main
        env:
          KUBE_CONFIG_DATA: ${{ env.KUBE_CONFIG }}
        with:
          args: apply -f ${{ env.KUBE_MANIFEST }}

      - name: Verify pod deployment
        uses: kodermax/kubectl-aws-eks@main
        env:
          KUBE_CONFIG_DATA: ${{ env.KUBE_CONFIG }}
        with:
          args: rollout status -n ${{ env.KUBE_NAMESPACE }} deployment/${{ github.event.repository.name }}